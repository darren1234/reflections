How did viewing a diff between two versions of a file help you see the bug that
was introduced?

It was an easy bug finder.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

You can test against different versions to find errors or to see differences in approaches.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

 A pro is that you will not commit until ready.  A con would be losing data if an external issue comes up.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

Often an update to a version will span multiple files.

How can you use the commands git log and git diff to view the history of files?

We can use git log to view an overall list of commits, and git diff to fins the actual coding changes.

How might using version control make you more confident to make changes that
could break something?

Knowing that you can step back to an earlier version give peace of mind.

Now that you have your workspace set up, what do you want to try using Git for?

Keeping files up to date, and testing purposes.